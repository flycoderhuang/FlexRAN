<?xml version="1.0"?>
<!--                                                                                                                                                              -->
<!--   Copyright (2021) Intel Corporation.                                                                                                                        -->
<!--                                                                                                                                                              -->
<!--   Redistribution. Redistribution and use in binary form, without modification, are permitted provided that the following conditions are met:                 -->
<!--                                                                                                                                                              -->
<!--    * Redistributions must reproduce the above copyright notice and the following disclaimer in the documentation and/or other materials provided with        -->
<!--   the distribution.                                                                                                                                          -->
<!--    * Neither the name of Intel Corporation nor the names of its suppliers may be used to endorse or promote products derived from this software              -->
<!--   without specific prior written permission.                                                                                                                 -->
<!--    * No reverse engineering, decompilation, or disassembly of this software is permitted.                                                                    -->
<!--                                                                                                                                                              -->
<!--   Limited patent license.  Intel Corporation grants a world-wide, royalty-free, non-exclusive license under patents it now or hereafter                      -->
<!--   owns or controls to make, have made, use, import, offer to sell and sell ("Utilize") this software, but solely to the extent that any                      -->
<!--   such patent is necessary to Utilize the software in the form provided by Intel. The patent license shall not apply to any combinations which include       -->
<!--   this software.  No hardware per se is licensed hereunder.                                                                                                  -->
<!--                                                                                                                                                              -->

<TestMacConfig>
    <version>oran_f_release_v1.0</version>

    <Api>
        <!-- Full path to wls device used for transport of MAC-PHY API (e.g. wls0 )-->
        <wls_dev_name>wls0</wls_dev_name>

        <!-- WLS Memory Block size used to send and receive APIs between L1 and Testmac. Must be multiple of 2 -->
        <wlsBlockSize>0x40000</wlsBlockSize>
    </Api>

    <!-- This section defines all DPDK related parameters used for DPDK initialization -->
    <DPDK>
        <!--  name of DPDK memory zone, needs to align between primary and secondary process -->
        <dpdkFilePrefix>gnb0</dpdkFilePrefix>
        <!--  DPDK IOVA Mode used for DPDK initialization. If 0, then PA mode. Else VA Mode. This needs to match whatever is in phycfg xml files -->
        <dpdkIovaMode>0</dpdkIovaMode>
    </DPDK>

    <!-- PhyStart Default Info -->
    <PhyStart>
        <!-- PhyStart Mode: 0 - Radio. 1 - Timer -->
        <PhyStartMode>1</PhyStartMode>
        <!-- PhyStart Period: TTI Duration 1 <= Period <= 10000 -->
        <PhyStartPeriod>40</PhyStartPeriod>
        <!-- PhyStart Count: Number of TTIs to run 0: Length of test from config file 1 <= Period <= 4294967295 -->
        <PhyStartCount>0</PhyStartCount>
    </PhyStart>

    <MlogVars>
        <!-- Number of subframes are logged into Mlog. Needs to be a power of 2 -->
        <MlogSubframes>128</MlogSubframes>
        <!-- Number of Cores being logged into Mlog -->
        <MlogCores>3</MlogCores>
        <!-- Size of each subframe (in bytes) -->
        <MlogSize>2048</MlogSize>
    </MlogVars>

    <!-- Latency Measurement Test: 0 -> Disable, 1 -> Enable -->
    <latencyTest>0</latencyTest>

    <!-- CPU Binding to Application Threads -->
    <Threads>
        <!-- Wireless Subsystem Thread: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <wlsRxThread>1, 90, 0</wlsRxThread>

        <!-- System Threads: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <systemThread>0, 0, 0</systemThread>

        <!-- TestMac Run Thread: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <runThread>0, 89, 0</runThread>

        <!-- Thread to send / receive URLLC APIS to / from testmac to Phy. It will be created only when the phy_config has URLLC Support added to it: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <urllcThread>15, 90, 0</urllcThread>
    </Threads>

    <StreamStats>
        <!-- If this is set to 1, L1 statistics are streamed over UDP to the desitnation address and port -->
        <StreamStats>0</StreamStats>

        <!-- Destination IP Address to stream the stats -->
        <StreamIp>127.0.0.1</StreamIp>

        <!-- IP Port used to create UDP socket -->
        <StreamPort>4000</StreamPort>
    </StreamStats>

    <StreamPackets>
        <!-- If this is set to 1, then packets are intercepted from network and sent to L1 in DL and vice versa in UL -->
        <StreamPacket>0</StreamPacket>

        <!-- Number of UEs to stream the packets. Based on this appropriate Dst IP address are setup to appropriate ports -->
        <StreamPacketNumStreams>1</StreamPacketNumStreams>

        <!-- This params tells how to split the Streams. 0: All streams on cell 0. 1: -->
        <!-- 0: All streams on cell 0. -->
        <!-- 1: Split streams per cell. -->
        <StreamPacketType>0</StreamPacketType>

        <!-- Network to Phy Stream Threads: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <StreamNet2PhyThread>10, 0, 0</StreamNet2PhyThread>

        <!-- Phy to Network Stream Threads: Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <StreamPhy2NetThread>10, 0, 0</StreamPhy2NetThread>

        <!-- How to stream the packets 0: Linux UDP Socket, 1: DPDK -->
        <StreamSocketType>0</StreamSocketType>

        <!-- If StreamSocketType, then which NIC port to use for streaming -->
        <StreamDpdkInterface>0000:bb:aa.0</StreamDpdkInterface>

        <!-- If StreamSocketType, then shared mempool name between L1 and MAC that can be used to create packet buffers -->
        <StreamSharedMemPoolName>testmac_pkt</StreamSharedMemPoolName>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 0) -->
        <StreamSrcIp0>0.0.0.0</StreamSrcIp0>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 0) -->
        <StreamDstIp0>127.0.0.1</StreamDstIp0>
        <!-- IP Port used to create Linux socket (UE 0) -->
        <StreamSrcPort0>2234</StreamSrcPort0>
        <StreamDstPort0>1234</StreamDstPort0>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 1) -->
        <StreamSrcIp1>0.0.0.0</StreamSrcIp1>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 1) -->
        <StreamDstIp1>127.0.0.1</StreamDstIp1>
        <!-- IP Port used to create Linux socket (UE 1) -->
        <StreamSrcPort1>2235</StreamSrcPort1>
        <StreamDstPort1>1235</StreamDstPort1>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 2) -->
        <StreamSrcIp2>0.0.0.0</StreamSrcIp2>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 2) -->
        <StreamDstIp2>127.0.0.1</StreamDstIp2>
        <!-- IP Port used to create Linux socket (UE 2) -->
        <StreamSrcPort2>2236</StreamSrcPort2>
        <StreamDstPort2>1236</StreamDstPort2>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 3) -->
        <StreamSrcIp3>0.0.0.0</StreamSrcIp3>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 3) -->
        <StreamDstIp3>127.0.0.1</StreamDstIp3>
        <!-- IP Port used to create Linux socket (UE 3) -->
        <StreamSrcPort3>2237</StreamSrcPort3>
        <StreamDstPort3>1237</StreamDstPort3>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 4) -->
        <StreamSrcIp4>0.0.0.0</StreamSrcIp4>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 4) -->
        <StreamDstIp4>127.0.0.1</StreamDstIp4>
        <!-- IP Port used to create Linux socket (UE 4) -->
        <StreamSrcPort4>2238</StreamSrcPort4>
        <StreamDstPort4>1238</StreamDstPort4>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 5) -->
        <StreamSrcIp5>0.0.0.0</StreamSrcIp5>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 5) -->
        <StreamDstIp5>127.0.0.1</StreamDstIp5>
        <!-- IP Port used to create Linux socket (UE 5) -->
        <StreamSrcPort5>2239</StreamSrcPort5>
        <StreamDstPort5>1239</StreamDstPort5>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 6) -->
        <StreamSrcIp6>0.0.0.0</StreamSrcIp6>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 6) -->
        <StreamDstIp6>127.0.0.1</StreamDstIp6>
        <!-- IP Port used to create Linux socket (UE 6) -->
        <StreamSrcPort6>2240</StreamSrcPort6>
        <StreamDstPort6>1240</StreamDstPort6>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 7) -->
        <StreamSrcIp7>0.0.0.0</StreamSrcIp7>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 7) -->
        <StreamDstIp7>127.0.0.1</StreamDstIp7>
        <!-- IP Port used to create Linux socket (UE 7) -->
        <StreamSrcPort7>2241</StreamSrcPort7>
        <StreamDstPort7>1241</StreamDstPort7>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 8) -->
        <StreamSrcIp8>0.0.0.0</StreamSrcIp8>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 8) -->
        <StreamDstIp8>127.0.0.1</StreamDstIp8>
        <!-- IP Port used to create Linux socket (UE 8) -->
        <StreamSrcPort8>2242</StreamSrcPort8>
        <StreamDstPort8>1242</StreamDstPort8>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 9) -->
        <StreamSrcIp9>0.0.0.0</StreamSrcIp9>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 9) -->
        <StreamDstIp9>127.0.0.1</StreamDstIp9>
        <!-- IP Port used to create Linux socket (UE 9) -->
        <StreamSrcPort9>2243</StreamSrcPort9>
        <StreamDstPort9>1243</StreamDstPort9>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 10) -->
        <StreamSrcIp10>0.0.0.0</StreamSrcIp10>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 10) -->
        <StreamDstIp10>127.0.0.1</StreamDstIp10>
        <!-- IP Port used to create Linux socket (UE 10) -->
        <StreamSrcPort10>2244</StreamSrcPort10>
        <StreamDstPort10>1244</StreamDstPort10>

        <!-- Src IP Address on interface to receive packets on. If 0.0.0.0, then INADDR_ANY is used (UE 11) -->
        <StreamSrcIp11>0.0.0.0</StreamSrcIp11>
        <!-- Destination IP of interface to send packets to. If 127.0.0.1, then will use local host (UE 11) -->
        <StreamDstIp11>127.0.0.1</StreamDstIp11>
        <!-- IP Port used to create Linux socket (UE 11) -->
        <StreamSrcPort11>2245</StreamSrcPort11>
        <StreamDstPort11>1245</StreamDstPort11>
    </StreamPackets>

</TestMacConfig>
