<?xml version="1.0"?>
<!--                                                                                                                                                              -->
<!--   Copyright (2021) Intel Corporation.                                                                                                                        -->
<!--                                                                                                                                                              -->
<!--   Redistribution. Redistribution and use in binary form, without modification, are permitted provided that the following conditions are met:                 -->
<!--                                                                                                                                                              -->
<!--    * Redistributions must reproduce the above copyright notice and the following disclaimer in the documentation and/or other materials provided with        -->
<!--   the distribution.                                                                                                                                          -->
<!--    * Neither the name of Intel Corporation nor the names of its suppliers may be used to endorse or promote products derived from this software              -->
<!--   without specific prior written permission.                                                                                                                 -->
<!--    * No reverse engineering, decompilation, or disassembly of this software is permitted.                                                                    -->
<!--                                                                                                                                                              -->
<!--   Limited patent license.  Intel Corporation grants a world-wide, royalty-free, non-exclusive license under patents it now or hereafter                      -->
<!--   owns or controls to make, have made, use, import, offer to sell and sell ("Utilize") this software, but solely to the extent that any                      -->
<!--   such patent is necessary to Utilize the software in the form provided by Intel. The patent license shall not apply to any combinations which include       -->
<!--   this software.  No hardware per se is licensed hereunder.                                                                                                  -->
<!--                                                                                                                                                              -->
<PhyConfig>
    <version>oran_f_release_v1.0</version>

    <Api>
        <!--  Maximum number of successive missing API allowed before triggering PHY stop (-1 is infinite) -->
        <successiveNoApi>15</successiveNoApi>
        <!--  Full path to wls device used for transport of MAC-PHY API (e.g. wls0 )-->
        <wls_dev_name>wls0</wls_dev_name>
        <!-- MAC managed WLS Memory size. This is used for all API buffer allocations -->
        <wlsMacMemorySize>0x7FE00000</wlsMacMemorySize>
        <!-- L1 managed WLS Memory size. This is used for SRS weight storage. For 64x64 usecase and 6 cells (with 512 users per cell) use 0x18000000 -->
        <wlsPhyMemorySize>0x18000000</wlsPhyMemorySize>
    </Api>

    <PhyLogs>
        <IqLogs>
            <dlIqLog>0</dlIqLog>
            <ulIqLog>0</ulIqLog>
        </IqLogs>
        <DebugLogs>
            <phyMlog>1</phyMlog>
            <phyStats>1</phyStats>
        </DebugLogs>
    </PhyLogs>

    <!-- This section defines all DPDK related parameters used for DPDK initialization -->
    <DPDK>
        <!--  name of DPDK memory zone, needs to align between primary and secondary process -->
        <dpdkFilePrefix>gnb0</dpdkFilePrefix>
        <!--  DPDK memory size allocated from hugepages [MB]  [default: 2048] -->
        <dpdkMemorySize>20480</dpdkMemorySize>
        <!--  DPDK IOVA Mode used for DPDK initialization. If 0, then PA mode. Else VA Mode -->
        <dpdkIovaMode>0</dpdkIovaMode>
        <!--  DPDK FEC BBDEV to use             [0 - SW, 1 - HW accelerator, 2 - Both] -->
        <dpdkBasebandFecMode>0</dpdkBasebandFecMode>
        <!--  DPDK BBDev name added to the passlist. The argument format is <[domain:]bus:devid.func> -->
        <dpdkBasebandDevice>0000:92:00.0</dpdkBasebandDevice>
        <!-- DDP flow config -->
        <FlowConfig>
            <FlowNum>0</FlowNum>
            <!-- flow0 config -->
            <Flow0>
                <Flow0Egress>0</Flow0Egress>
                <Flow0Ingress>1</Flow0Ingress>
                <!-- GTP:v_pt_rsv_flags, msg_type, msg_len, teid -->
                <Flow0GTPSpec>0x0, 0x0, 0x0, 0x07000000</Flow0GTPSpec>
                <Flow0GTPLast>0x0, 0x0, 0x0, 0x07003f00</Flow0GTPLast>
                <Flow0GTPMask>0x0, 0x0, 0x0, 0x00003f00</Flow0GTPMask>
                <!-- the Index should be equal to the one in L2 maccfg.xml -->
                <Flow0QueueIndex>1</Flow0QueueIndex>
            </Flow0>
            <!-- flow1 config -->
            <Flow1>
                <Flow1Egress>0</Flow1Egress>
                <Flow1Ingress>1</Flow1Ingress>
                <!-- GTP:v_pt_rsv_flags, msg_type, msg_len, teid -->
                <Flow1GTPSpec>0x0, 0x0, 0x0, 0x05004000</Flow1GTPSpec>
                <Flow1GTPLast>0x0, 0x0, 0x0, 0x05018f00</Flow1GTPLast>
                <Flow1GTPMask>0x0, 0x0, 0x0, 0x0001ff00</Flow1GTPMask>
                <!-- the Index should be equal to the one in L2 maccfg.xml -->
                <Flow1QueueIndex>2</Flow1QueueIndex>
            </Flow1>
        </FlowConfig>
        <!-- This section is used to init DPDK shared ports and memory with secondary process  -->
        <DPDKSharedResource>
            <!-- number of the set of shared ports and corresponding memory, maximum 4, if none, set to 0 -->
            <numSharedResource>0</numSharedResource>

            <!--  Shared Resource Config 0 -->
            <SharedResource0>
                <!-- DPDK memory pool name, if don't want to init memory pool, set name to 0 -->
                <mempoolName0>fast_pkt</mempoolName0>
                <!-- The number of elements in the mempool. The optimum size for a mempool is when n is a power of two minus one: n = (2^q - 1) -->
                <numElement0>65535</numElement0>
                <!-- DDP flag[0 - disable, 1 - enable] -->
                <enableDDP0>0</enableDDP0>
                <!-- The size of each element -->
                <elementSize0>2048</elementSize0>
                <!-- The size of the private data appended after the mempool structure-->
                <privateDataSize0>64</privateDataSize0>
                <!-- DPDK ring pool name, if don't want to init ring, set name to 0 -->
                <ringName0>0</ringName0>
                <!-- The size of the ring (must be a power of 2) -->
                <ringSize0>1024</ringSize0>
                <!-- DPDK port pci-e address, if don't want to init port, set number to 0 -->
                <portAddr0>0000:af:00.0</portAddr0>
                <!-- DPDK port socket index -->
                <portSocketIdx0>1</portSocketIdx0>
                <!-- Number of Tx queue -->
                <txQueueNum0>1</txQueueNum0>
                <!-- Tx queue description -->
                <txQueueDesc0>512</txQueueDesc0>
                <!-- Number of Rx queue -->
                <rxQueueNum0>1</rxQueueNum0>
                <!-- Rx queue description -->
                <rxQueueDesc0>128</rxQueueDesc0>
                <!-- Max payload size, if larger than 1500Bytes, Jumbo frame will be enabled -->
                <maxPayloadSize0>9728</maxPayloadSize0>
                <!--  Enable DPDK based NIC ports on testmac [0 - Dont Initialize, 1 - Initialize] -->
                <testMacEnable0>0</testMacEnable0>
            </SharedResource0>

            <!--  Shared Resource Config 1 -->
            <SharedResource1>
                <!-- DPDK memory pool name, if don't want to init memory pool, set name to 0 -->
                <mempoolName1>header_pkt</mempoolName1>
                <!-- The number of elements in the mempool. The optimum size for a mempool is when n is a power of two minus one: n = (2^q - 1) -->
                <numElement1>65535</numElement1>
                <!-- DDP flag[0 - disable, 1 - enable] -->
                <enableDDP1>0</enableDDP1>
                <!-- The size of each element -->
                <elementSize1>2048</elementSize1>
                <!-- The size of the private data appended after the mempool structure-->
                <privateDataSize1>64</privateDataSize1>
                <!-- DPDK ring pool name, if don't want to init ring, set name to 0 -->
                <ringName1>0</ringName1>
                <!-- The size of the ring (must be a power of 2) -->
                <ringSize1>1024</ringSize1>
                <!-- DPDK port pci-e address, if don't want to init port, set number to 0 -->
                <portAddr1>0000:af:00.1</portAddr1>
                <!-- DPDK port socket index -->
                <portSocketIdx1>1</portSocketIdx1>
                <!-- Number of Tx queue -->
                <txQueueNum1>2</txQueueNum1>
                <!-- Tx queue description -->
                <txQueueDesc1>512</txQueueDesc1>
                <!-- Number of Rx queue -->
                <rxQueueNum1>1</rxQueueNum1>
                <!-- Rx queue description -->
                <rxQueueDesc1>128</rxQueueDesc1>
                <!-- Max payload size, if larger than 1500Bytes, Jumbo frame will be enabled -->
                <maxPayloadSize1>9728</maxPayloadSize1>
                <!--  Enable DPDK based NIC ports on testmac [0 - Dont Initialize, 1 - Initialize] -->
                <testMacEnable0>0</testMacEnable0>
            </SharedResource1>

            <!--  Shared Resource Config 2 -->
            <SharedResource2>
                <!-- DPDK memory pool name, if don't want to init memory pool, set name to 0 -->
                <mempoolName2>clone_pkt</mempoolName2>
                <!-- The number of elements in the mempool. The optimum size for a mempool is when n is a power of two minus one: n = (2^q - 1) -->
                <numElement2>65535</numElement2>
                <!-- DDP flag[0 - disable, 1 - enable] -->
                <enableDDP2>0</enableDDP2>
                <!-- The size of each element -->
                <elementSize2>2048</elementSize2>
                <!-- The size of the private data appended after the mempool structure-->
                <privateDataSize2>64</privateDataSize2>
                <!-- DPDK ring pool name, if don't want to init ring, set name to 0 -->
                <ringName2>0</ringName2>
                <!-- The size of the ring (must be a power of 2) -->
                <ringSize2>1024</ringSize2>
                <!-- DPDK port pci-e address, if don't want to init port, set number to 0 -->
                <portAddr2>0</portAddr2>
                <!-- DPDK port socket index -->
                <portSocketIdx2>0</portSocketIdx2>
                <!-- Number of Tx queue -->
                <txQueueNum2>1</txQueueNum2>
                <!-- Tx queue description -->
                <txQueueDesc2>512</txQueueDesc2>
                <!-- Number of Rx queue -->
                <rxQueueNum2>1</rxQueueNum2>
                <!-- Rx queue description -->
                <rxQueueDesc2>128</rxQueueDesc2>
                <!-- Max payload size, if larger than 1500Bytes, Jumbo frame will be enabled -->
                <maxPayloadSize2>9728</maxPayloadSize2>
                <!--  Enable DPDK based NIC ports on testmac [0 - Dont Initialize, 1 - Initialize] -->
                <testMacEnable0>0</testMacEnable0>
            </SharedResource2>

            <!--  Shared Resource Config 3 -->
            <SharedResource3>
                <!-- DPDK memory pool name, if don't want to init memory pool, set name to 0 -->
                <mempoolName3>pdu3</mempoolName3>
                <!-- The number of elements in the mempool. The optimum size for a mempool is when n is a power of two minus one: n = (2^q - 1) -->
                <numElement3>65535</numElement3>
                <!-- DDP flag[0 - disable, 1 - enable] -->
                <enableDDP3>0</enableDDP3>
                <!-- The size of each element -->
                <elementSize3>2048</elementSize3>
                <!-- The size of the private data appended after the mempool structure-->
                <privateDataSize3>64</privateDataSize3>
                <!-- DPDK ring pool name, if don't want to init ring, set name to 0 -->
                <ringName3>sdu3</ringName3>
                <!-- The size of the ring (must be a power of 2) -->
                <ringSize3>1024</ringSize3>
                <!-- DPDK port pci-e address, if don't want to init port, set number to 0 -->
                <portAddr3>0</portAddr3>
                <!-- DPDK port socket index -->
                <portSocketIdx3>0</portSocketIdx3>
                <!-- Number of Tx queue -->
                <txQueueNum3>1</txQueueNum3>
                <!-- Tx queue description -->
                <txQueueDesc3>512</txQueueDesc3>
                <!-- Number of Rx queue -->
                <rxQueueNum3>1</rxQueueNum3>
                <!-- Rx queue description -->
                <rxQueueDesc3>128</rxQueueDesc3>
                <!-- Max payload size, if larger than 1500Bytes, Jumbo frame will be enabled -->
                <maxPayloadSize3>9728</maxPayloadSize3>
                <!--  Enable DPDK based NIC ports on testmac [0 - Dont Initialize, 1 - Initialize] -->
                <testMacEnable0>0</testMacEnable0>
	        </SharedResource3>
        </DPDKSharedResource>
    </DPDK>

    <Radio>
        <!-- Enable/disable radio               [0 - disable, 4 - xRAN Mode] -->
        <radioEnable>4</radioEnable>
    </Radio>

    <PhyVars>
        <!-- The below variables can be modified in file here and it will take effect when PHY is brought up after reboot of system -->
        <Pdsch>
            <!-- Split PDSCH symbol processing -->
            <PdschSymbolSplit>0</PdschSymbolSplit>

            <!-- Enable the PDSCH symbol process to OFDM symbol based split, otherwise UE group/UE based split. 0 disable, 1 enable -->
            <PdschOfdmSplitEnable>1</PdschOfdmSplitEnable>

            <!-- Split PDSCH DL beamforiming weight generation processing -->
            <PdschDlWeightSplit>0</PdschDlWeightSplit>

            <!-- Max number of parallel tasks that the DL FEC Encoder is split into. Number needs to be between 1 and 4. If wrong value entered, it will be defaulted to 1.  -->
            <!-- For hardware offload (using fpga / eAsic) it will be defaulted to 1.  -->
            <FecEncSplit>1</FecEncSplit>
        </Pdsch>
        <Pusch>
            <!-- Split processing for Channel Estimation for PUSCH -->
            <PuschChanEstSplit>0</PuschChanEstSplit>

            <!-- Split processing for MMSE for PUSCH -->
            <PuschMmseSplit>0</PuschMmseSplit>

            <!-- Split processing for LLR Rx for PUSCH -->
            <PuschLlrRxSplit>0</PuschLlrRxSplit>

            <!-- Split PUSCH UL beamforiming weight generation processing -->
            <PuschUlWeightSplit>0</PuschUlWeightSplit>

            <!-- Software FEC Decoder Early Termination disabled. If 1, then programmed number of iterations are run from MAC PHY API regardless of CRC PASS -->
            <FecDecEarlyTermDisable>0</FecDecEarlyTermDisable>

            <!-- FEC LDPC Decoder Number of iterations. If 0 then Number of iterations is set to 10. Else this value is used -->
            <FecDecNumIter>12</FecDecNumIter>

            <!-- Max number of parallel tasks that the UL FEC Decoder is split into. Number needs to be between 1 and 4. If wrong value entered, it will be defaulted to 1. -->
            <!-- For hardware offload (using fpga / eAsic) it will be defaulted to 1.  -->
            <FecDecSplit>1</FecDecSplit>

            <!-- Only for terasic. Number of decimal digits of LLR fixed point output. If 0 then this value is set to 2, which means LLR is 8S2. Else this value is used -->
            <llrOutDecimalDigit>2</llrOutDecimalDigit>

            <!-- SNR Threshold for IRC. If -100, then IRC will be disabled -->
            <IrcEnableThreshold>-100</IrcEnableThreshold>

            <!-- PUSCH Noise Scaling -->
            <!-- Used to scale measured noise to account for ChanEst errors for mu=0 and 2 layers. -->
            <!-- Valid values = 1, 2, 3, 4 -->
            <PuschNoiseScale>2</PuschNoiseScale>

            <!-- frequency interpolation method for PUSCH CE -->
            <!-- bit 0: 0: 1RB sinc interpolation 1: 4RB sinc interpolation -->
            <!-- bit 1: 0: disable pre - interpolation 1: enable pre - interpolation -->
            <CEInterpMethod>2</CEInterpMethod>

            <!-- frequency offset compensation -->
            <!-- 0: disable, 1: enable -->
            <CEFocEnable>0</CEFocEnable>

            <!-- frequency offset compensation granularity in terms of RE-->
            <CEFocGranularity>768</CEFocGranularity>

            <!-- time domain linear interpolation for PUSCH enable = 1, disable = 0-->
            <PuschLinearInterpEnable>1</PuschLinearInterpEnable>

            <!-- time domain linear interpolation granularity for PUSCH cell0, cell1 ... cellx respectively -->
            <!-- PuschLinearInterpGranularityAll - Use this value for all Cells -->
            <!-- PuschLinearInterpGranularity0 - Use this value for Cell0 -->
            <!-- PuschLinearInterpGranularity1 - Use this value for Cell1 and so on -->
            <!-- PuschLinearInterpGranularityAll will superced PuschLinearInterpGranularityX (where X is CellId) -->
            <!-- 0 - Linear, 1 - Linear2 ... 4 - Linear6, 99 - nearest -->
            <!-- use comma to separte the values if want to apply differnt granularity for differnt UE groups -->
            <PuschLinearInterpGranularityAll>4</PuschLinearInterpGranularityAll>

            <!-- beamforming weight matrix gen algo choose-->
            <!-- 0: ZF based weight gen algo, 1: dftcodebook based weight gen algo-->
            <DFTBfWeightGenEnable>0</DFTBfWeightGenEnable>

            <!-- beamforming weight matrix gen RB pick granularity-->
            <BfWeightGenGranularity>2</BfWeightGenGranularity>

            <!-- Flag to enable/disable UL report of received PUSCH DMRS amplitude-->
            <DMRSPwrReportEna>0</DMRSPwrReportEna>
        </Pusch>
        <Pucch>
            <!-- Split processing for PUCCH -->
            <PucchSplit>0</PucchSplit>
        </Pucch>
        <Srs>
            <!-- Split processing for SRS CE -->
            <SrsCeSplit>0</SrsCeSplit>
        </Srs>
        <Prach>
            <!-- Prach Detection Threshold. If non zero, computed value is used. -->
            <prachDetectThreshold>0</prachDetectThreshold>
            <!-- prach detect fo check -->
            <!-- 0: disable, 1: enable -->
            <prachDetectFoCheck>0</prachDetectFoCheck>
            <!-- prach Threshold calculating method -->
            <prachThresholdMethod>0</prachThresholdMethod>
        </Prach>

        <Urllc>
            <!-- For URLLC cells, setting this field to 1 will split the FEC processing by 2 (half in software and half in hardware). Default: 0 Disabled -->
            <UrllcPuschFecSplit>0</UrllcPuschFecSplit>

            <!-- If there are URLLC Cells, this field indicates how many BBDEV Queue Ids to allocate for URLLC. All others are for eMBB. Default: 0 Disabled -->
            <!-- The lower the queue ID, the higher the priority to process these -->
            <UrllcBbdevIdEnd>0</UrllcBbdevIdEnd>
        </Urllc>
    </PhyVars>

    <MlogVars>
        <!-- Number of subframes are logged into Mlog. Needs to be a power of 2 -->
        <MlogSubframes>128</MlogSubframes>
        <!-- Number of Cores being logged into Mlog -->
        <MlogCores>40</MlogCores>
        <!-- Size of each subframe (in bytes) -->
        <MlogSize>10000</MlogSize>
    </MlogVars>

    <!-- CPU Binding to Application Threads -->
    <Threads>
        <!-- System Threads (Single core id value): Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <systemThread>2, 0, 0</systemThread>

        <!-- Timer Thread (Single core id value): Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <timerThread>0, 96, 0</timerThread>

        <!-- FPGA for LDPC Thread (Single core id value): Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <FpgaDriverCpuInfo>3, 96, 0</FpgaDriverCpuInfo>

        <!-- FPGA for Front Haul (FFT / IFFT) Thread (Single core id value): Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <!-- This thread should be created for timer mode and hence can be same core as LDPC polling core -->
        <FrontHaulCpuInfo>3, 96, 0</FrontHaulCpuInfo>

        <!-- DPDK Radio Master Thread (Single core id value): Core, priority, Policy [0: SCHED_FIFO 1: SCHED_RR] -->
        <radioDpdkMaster>2, 99, 0</radioDpdkMaster>
    </Threads>

    <BbuPoolConfig>
        <!-- If set to 1, BBU Pool cores, return control to kernel after task is completed. Else it will always be in user space without going to sleep -->
        <!-- It is mainly used when setting core to harware sleep mode and latency of sleep is not very deterministic -->
        <BbuPoolSleepEnable>1</BbuPoolSleepEnable>

        <!-- Priority Of All BBU Cores -->
        <BbuPoolThreadCorePriority>94</BbuPoolThreadCorePriority>
        <!-- Policy for All BBU Cores [0: SCHED_FIFO 1: SCHED_RR] -->
        <BbuPoolThreadCorePolicy>0</BbuPoolThreadCorePolicy>

        <!-- BBUPool Worker Thread Cores (Bit mask of all cores that are used for BBU Pool in Decimal or Hex [needs to start with "0x"]) -->
        <BbuPoolThreadDefault_0_63>0xF0</BbuPoolThreadDefault_0_63>
        <BbuPoolThreadDefault_64_127>0x0</BbuPoolThreadDefault_64_127>
        <BbuPoolThreadDefault_128_191>0x0</BbuPoolThreadDefault_128_191>
        <BbuPoolThreadDefault_192_255>0x0</BbuPoolThreadDefault_192_255>

        <!-- BBUPool Worker Thread Cores dedicated for SRS processing in case of Massive MIMO Configs. Mask needs to be a subset of BbuPoolThreadDefault_0_63 or BbuPoolThreadDefault_64_127 -->
        <!-- (Bit mask of all cores that are used for BBU Pool in Decimal or Hex [needs to start with "0x"]) -->
        <BbuPoolThreadSrs_0_63>0x0</BbuPoolThreadSrs_0_63>
        <BbuPoolThreadSrs_64_127>0x0</BbuPoolThreadSrs_64_127>
        <BbuPoolThreadSrs_128_191>0x0</BbuPoolThreadSrs_128_191>
        <BbuPoolThreadSrs_192_255>0x0</BbuPoolThreadSrs_192_255>

        <!-- BBUPool Worker Thread Cores dedicated for DL beam  processing in case of Massive MIMO Configs. Mask needs to be a subset of BbuPoolThreadDefault_0_63 or BbuPoolThreadDefault_64_127 -->
        <!-- (Bit mask of all cores that are used for BBU Pool in Decimal or Hex [needs to start with "0x"]) -->
        <BbuPoolThreadDlbeam_0_63>0x0</BbuPoolThreadDlbeam_0_63>
        <BbuPoolThreadDlbeam_64_127>0x0</BbuPoolThreadDlbeam_64_127>
        <BbuPoolThreadDlbeam_128_191>0x0</BbuPoolThreadDlbeam_128_191>
        <BbuPoolThreadDlbeam_192_255>0x0</BbuPoolThreadDlbeam_192_255>

        <!-- URLLC Processing Thread (Bit mask of all cores that are used in Decimal or Hex [needs to start with "0x"]) -->
        <BbuPoolThreadUrllc>0x100</BbuPoolThreadUrllc>

        <!-- The number of elements per queue (for new scheduler only). Values need to be comma seperated and a max of 10 queues. -->
        <eBbuPoolNumQueue>1024, 1024, 1024, 1024</eBbuPoolNumQueue>

        <!-- Number of ping pong context to use for scheduler. THis is needed mainly for TDD scenarios so UL is prioritized over DL. Range [1-4] -->
        <eBbuPoolNumContext>1</eBbuPoolNumContext>

        <!-- Maximum Number of contexts to fetch by each consumer thread. This is used only if eBbuPoolNumContext>1. Range [1-eBbuPoolNumContext] -->
        <eBbuPoolMaxContextFetch>1</eBbuPoolMaxContextFetch>

        <!-- Enable internal print of statistics from New Scheduler Library. 0: Off, 1: On. -->
        <eBbuPoolPrintFlag>0</eBbuPoolPrintFlag>

        <!-- Enable FEC Only Task List for 5GNR L1 Application. This is used to test the FEC Enq/Deq Operations with hardware. 0: Off, 1: On. -->
        <eBbuPoolFecOnlyList>0</eBbuPoolFecOnlyList>
    </BbuPoolConfig>

    <Fpga>
        <!-- Time advance added in FPGA from PPS. This is to sync with RRU -->
        <FrontHaulTimeAdvance>7450</FrontHaulTimeAdvance>

        <!-- Number of ports used from FPGA. 4Ports: 462607 (0x70F0F) 2Ports: 459523 (0x70303) -->
        <nEthPorts>462607</nEthPorts>
        <!-- phase compensation enable flag 0:disablle 1:enable -->
        <nPhaseCompFlag>0</nPhaseCompFlag>

        <!-- Version Numbers on FPGA tested with each release -->
        <!-- FEC Version for mmWave -->
        <nFecFpgaVersionMu3>0x20010900</nFecFpgaVersionMu3>

        <!-- FEC Version for sub3 and sub6 -->
        <nFecFpgaVersionMu0_1>0x0423D420</nFecFpgaVersionMu0_1>

        <!-- Front Haul Version for mmWave -->
        <nFhFpgaVersionMu3>0x8001000F</nFhFpgaVersionMu3>

        <!-- Front Haul Version for sub3 and sub6 -->
        <nFhFpgaVersionMu0_1>0x90010008</nFhFpgaVersionMu0_1>
    </Fpga>

    <StreamStats>
        <!-- If this is set to 1, L1 statistics are streamed over UDP to the desitnation address and port -->
        <StreamStats>0</StreamStats>

        <!-- Destination IP Address to stream the stats -->
        <StreamIp>127.0.0.1</StreamIp>

        <!-- IP Port used to create UDP socket -->
        <StreamPort>2000</StreamPort>
    </StreamStats>

</PhyConfig>

